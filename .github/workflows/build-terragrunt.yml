---
name: 'Build terragrunt'

on:
  push:
    branches:
      - main
    paths:
      - 'terragrunt/**'
  workflow_dispatch:

env:
  DOCKER_IMAGE: terragrunt
  DOCKER_IMAGE_GROUP: ci
  AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
  AWS_OIDC_ROLE_ARN: ${{secrets.AWS_OIDC_ROLE_ARN}}

permissions:
  id-token: write
  contents: read

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: 'checkout'
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: 'setup qemu'
        uses: docker/setup-qemu-action@v3

      - name: 'setup docker buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'configure aws credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{env.AWS_OIDC_ROLE_ARN}}
          role-session-name: aws-oidc-${{github.repository.name}}-${{github.run_id}}
          aws-region: ${{env.AWS_DEFAULT_REGION}}

      - name: 'login to amazon ecr public'
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: 'extract version from dockerfile'
        id: extract_version
        run: |
          DOCKER_TAG=$(sed -n 's/^ARG TERRAGRUNT_VERSION=v\?\([0-9.]*\).*/\1/p' ./${{env.DOCKER_IMAGE}}/Dockerfile.alpine)
          echo "DOCKER_TAG=${DOCKER_TAG#v}" >> $GITHUB_ENV
          echo "DOCKER_TAG=${DOCKER_TAG#v}"

      - name: 'create ecr-public repository'
        run: |
          aws ecr-public create-repository --repository-name ${{env.DOCKER_IMAGE_GROUP}}/${{env.DOCKER_IMAGE}} --region us-east-1 || true

      - name: 'push'
        uses: docker/bake-action@v5
        with:
          targets: push
          workdir: ./${{env.DOCKER_IMAGE}}
