# syntax=docker.io/docker/dockerfile:1

FROM public.ecr.aws/w2u0w5i6/base/python:3.13.1-alpine AS base

USER root

ENV HOME=/root \
    POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR="${HOME}/.cache/pypoetry" \
    POETRY_HOME=/opt/poetry

ENV PATH="${POETRY_HOME}/bin:${POETRY_HOME}/venv/bin:${PATH}"

RUN apk add --no-cache \
    sudo bash bash-completion git aws-cli curl ca-certificates jq make openssh sshpass libc6-compat \
    && rm -rf /var/cache/apk/* /etc/apk/cache/* \
    && ln -s /var/cache/apk /etc/apk/cache

FROM base AS build

WORKDIR "${POETRY_HOME}"

RUN apk add --no-cache dpkg \
    && curl -fsSL https://install.python-poetry.org | python3 -

COPY pyproject.toml .

RUN source "${POETRY_HOME}/venv/bin/activate" \
    && poetry install

RUN curl -fsSL "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_$(case $(uname -m) in x86_64) echo 64bit ;; aarch64) echo arm64 ;; esac)/session-manager-plugin.deb" -o /tmp/session-manager-plugin.deb \
    && dpkg -x /tmp/session-manager-plugin.deb /tmp/session-manager-plugin \
    && mv /tmp/session-manager-plugin/usr/local/sessionmanagerplugin/bin/session-manager-plugin /usr/local/bin/session-manager-plugin

FROM base AS final

COPY --from=build "${POETRY_HOME}" "${POETRY_HOME}"
COPY --from=build /usr/local/bin/session-manager-plugin /usr/local/bin/session-manager-plugin

RUN chmod +x /usr/local/bin/session-manager-plugin
